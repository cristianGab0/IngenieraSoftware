package com.gt.umg.ing.software.models.entity;
// Generated 17/03/2022 09:17:45 PM by Hibernate Tools 4.3.1

import com.fasterxml.jackson.annotation.JsonIgnoreProperties;
import java.math.BigDecimal;
import java.time.LocalDateTime;
import java.util.Date;
import java.util.List;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.JoinColumns;
import javax.persistence.JoinTable;
import javax.persistence.ManyToMany;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.PrePersist;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;
import org.hibernate.annotations.CreationTimestamp;

/**
 * Vuelo generated by hbm2java
 */
@Entity
@Table(name = "vuelo",
        schema = "public"
)
public class Vuelo implements java.io.Serializable {

    private int id_vuelo;
//     private Aeropuerto aeropuertoByAeropuertoLlegada;
//     private Aeropuerto aeropuertoByAeropuertoSalida;
    private int aeropuertoLlegada;
    private int aeropuertoSalida;
    private Avion avion;
//    private int avion;
    private Date fecha_hora_salida;
    private Date fecha_hora_llegada;
    private String estado;
    private BigDecimal precioEconomica;
    private BigDecimal precioEjecutiva;
     
    private LocalDateTime fechaHoraCreacion;
     private String usuarioAgrego;
     private String ipUsuario;
    private List<Tripulante> tripulantes;
    private List<VueloPasajero> vueloPasajeros;

    public Vuelo() {
    }

    public Vuelo(int id_vuelo, int aeropuertoByAeropuertoLlegada, int aeropuertoByAeropuertoSalida, Avion avion) {
        this.id_vuelo = id_vuelo;
        this.aeropuertoLlegada = aeropuertoByAeropuertoLlegada;
        this.aeropuertoSalida = aeropuertoByAeropuertoSalida;
        this.avion = avion;
    }

    public Vuelo(int id_vuelo, int aeropuertoLlegada, int aeropuertoSalida, Avion avion, Date fecha_hora_salida, Date fecha_hora_llegada, String estado, BigDecimal precioEconomica, BigDecimal precioEjecutiva, LocalDateTime   fechaHoraCreacion, String usuarioAgrego, String ipUsuario, List<VueloPasajero> vueloPasajeros) {
        this.id_vuelo = id_vuelo;
        this.aeropuertoLlegada = aeropuertoLlegada;
        this.aeropuertoSalida = aeropuertoSalida;
        this.avion = avion;
        this.fecha_hora_salida = fecha_hora_salida;
        this.fecha_hora_llegada = fecha_hora_llegada;
        this.estado = estado;
        this.precioEconomica = precioEconomica;
        this.precioEjecutiva = precioEjecutiva;
        this.fechaHoraCreacion = fechaHoraCreacion;
        this.usuarioAgrego = usuarioAgrego;
        this.ipUsuario = ipUsuario;
        this.vueloPasajeros = vueloPasajeros;
    }
    
//    @PrePersist
//    public void prePrersis() {
//        this.fechaHoraCreacion = new Date().;
//    }
    
    @Id
    @GeneratedValue(strategy = GenerationType.IDENTITY)
    @Column(name = "id_vuelo", unique = true, nullable = false)
    public int getIdvuelo() {
        return this.id_vuelo;
    }

    public void setIdvuelo(int id_vuelo) {
        this.id_vuelo = id_vuelo;
    }

//    @ManyToOne(fetch = FetchType.LAZY)
    @Column(name = "aeropuerto_llegada", nullable = false)
    public int getAeropuertoLlegada() {
        return this.aeropuertoLlegada;
    }

    public void setAeropuertoLlegada(int aeropuertoLlegada) {
        this.aeropuertoLlegada = aeropuertoLlegada;
    }

//    @ManyToOne(fetch = FetchType.LAZY)
    @Column(name = "aeropuerto_salida", nullable = false)
    public int getAeropuertoSalida() {
        return this.aeropuertoSalida;
    }

    public void setAeropuertoSalida(int aeropuertoSalida) {
        this.aeropuertoSalida = aeropuertoSalida;
    }

    @JsonIgnoreProperties({"hibernateLazyInitializer", "handler"})
    @ManyToOne(fetch = FetchType.LAZY)
    @JoinColumns({
        @JoinColumn(name = "id_avion", referencedColumnName = "id_avion"),
        @JoinColumn(name = "id_aerolinea", referencedColumnName = "id_aerolinea")})
    public Avion getAvion() {
        return this.avion;
    }

    public void setAvion(Avion avion) {
        this.avion = avion;
    }

    @Temporal(TemporalType.TIMESTAMP)
    @Column(name = "fecha_hora_salida", length = 29)
    public Date getFecha_hora_salida() {
        return this.fecha_hora_salida;
    }

    public void setFecha_hora_salida(Date fecha_hora_salida) {
        this.fecha_hora_salida = fecha_hora_salida;
    }

    @Temporal(TemporalType.TIMESTAMP)
    @Column(name = "fecha_hora_llegada", length = 29)
    public Date getFecha_hora_llegada() {
        return this.fecha_hora_llegada;
    }

    public void setFecha_hora_llegada(Date fecha_hora_llegada) {
        this.fecha_hora_llegada = fecha_hora_llegada;
    }

    @Column(name = "estado", length = 25)
    public String getEstado() {
        return this.estado;
    }

    public void setEstado(String estado) {
        this.estado = estado;
    }

    @Column(name = "precio_economica", precision = 7)
    public BigDecimal getPrecioEconomica() {
        return this.precioEconomica;
    }

    public void setPrecioEconomica(BigDecimal precioEconomica) {
        this.precioEconomica = precioEconomica;
    }

    @Column(name = "precio_ejecutiva", precision = 7)
    public BigDecimal getPrecioEjecutiva() {
        return this.precioEjecutiva;
    }

    public void setPrecioEjecutiva(BigDecimal precioEjecutiva) {
        this.precioEjecutiva = precioEjecutiva;
    }

    @ManyToMany(fetch = FetchType.LAZY)
    @JoinTable(name = "vuelo_tripulante", schema = "public", joinColumns = {
        @JoinColumn(name = "id_vuelo", nullable = false, updatable = false)}, inverseJoinColumns = {
        @JoinColumn(name = "id_tripulante", nullable = false, updatable = false)})
    public List<Tripulante> getTripulantes() {
        return this.tripulantes;
    }

    public void setTripulantes(List<Tripulante> tripulantes) {
        this.tripulantes = tripulantes;
    }
    @JsonIgnoreProperties({"hibernateLazyInitializer", "handler"})
    @OneToMany(fetch = FetchType.LAZY, mappedBy = "vuelo")
    public List<VueloPasajero> getVueloPasajeros() {
        return this.vueloPasajeros;
    }

    public void setVueloPasajeros(List<VueloPasajero> vueloPasajeros) {
        this.vueloPasajeros = vueloPasajeros;
    }
    
    @CreationTimestamp
    @Column(name="fecha_hora_creacion", length=29)
    public LocalDateTime  getFechaHoraCreacion() {
        return this.fechaHoraCreacion;
    }
    
    public void setFechaHoraCreacion(LocalDateTime  fechaHoraCreacion) {
        this.fechaHoraCreacion = fechaHoraCreacion;
    }
    
    @Column(name="usuario_agrego")
    public String getUsuarioAgrego() {
        return this.usuarioAgrego;
    }
    
    public void setUsuarioAgrego(String usuarioAgrego) {
        this.usuarioAgrego = usuarioAgrego;
    }

    
    @Column(name="ip_usuario")
    public String getIpUsuario() {
        return this.ipUsuario;
    }
    
    public void setIpUsuario(String ipUsuario) {
        this.ipUsuario = ipUsuario;
    }


    @Override
    public String toString() {
        return "Vuelo{" + "id_vuelo=" + id_vuelo + ", aeropuertoLlegada=" + aeropuertoLlegada + ", aeropuertoSalida=" + aeropuertoSalida + ", avion=" + avion + ", fecha_hora_salida=" + fecha_hora_salida + ", fecha_hora_llegada=" + fecha_hora_llegada + ", estado=" + estado + ", precioEconomica=" + precioEconomica + ", precioEjecutiva=" + precioEjecutiva + ", tripulantes=" + tripulantes + ", vueloPasajeros=" + vueloPasajeros + '}';
    }

}
